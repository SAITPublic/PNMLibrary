From 2e308e6af13a355ca3912e3b6cc85677e02ee317 Mon Sep 17 00:00:00 2001
From: Egor Kutovoi <e.kutovoi@partner.samsung.com>
Date: Tue, 20 Sep 2022 17:23:46 +0300
Subject: [PATCH 071/135] [application] Even more cleanup, deduce metadata from
 input

Related to: AXDIMM-319
---
 caffe2/operators/lengths_reducer_ops_axdimm.cc | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/caffe2/operators/lengths_reducer_ops_axdimm.cc b/caffe2/operators/lengths_reducer_ops_axdimm.cc
index 0554b5cd..7baca708 100644
--- a/caffe2/operators/lengths_reducer_ops_axdimm.cc
+++ b/caffe2/operators/lengths_reducer_ops_axdimm.cc
@@ -151,7 +151,7 @@ class AXDIMMSparseLengthsReductionOpVec : public Operator<AXDIMMContext> {
         "tables_layout_descriptor", 0);
     device_ = axdimm_create_base_device();
 
-    private_tables_ = tables_descriptor_ != 0;
+    private_tables_ = tables_descriptor_ == 0;
 
     if (private_tables_) {
       LoadTables();
@@ -339,8 +339,7 @@ class AXDIMMSparseLengthsReductionOpVec : public Operator<AXDIMMContext> {
 
  private:
   void LoadTables() {
-    auto sparse_feature_size =
-        this->template GetSingleArgument<uint64_t>("sparse_feature_size", 0);
+    uint64_t sparse_feature_size = Input(0).size_from_dim(1);
     CAFFE_ENFORCE_NE(
         sparse_feature_size,
         0,
@@ -349,16 +348,16 @@ class AXDIMMSparseLengthsReductionOpVec : public Operator<AXDIMMContext> {
     auto path = this->template GetSingleArgument<std::string>("path", "");
     CAFFE_ENFORCE(!path.empty(), "Empty file path");
 
-    // NOTE: There is no GetRepeatedArgument<uint32_t>
-    auto rows_64 = this->template GetRepeatedArgument<uint64_t>("rows", {});
-    CAFFE_ENFORCE_NE(rows_64.size(), 0, "Empty rows array");
+    std::vector<uint32_t> rows(block_size_);
 
-    std::vector<uint32_t> rows(rows_64.begin(), rows_64.end());
+    for (int i = 0; i < block_size_; ++i) {
+      rows[i] = Input(i).size(0);
+    }
 
     auto fd = open(path.c_str(), O_RDONLY);
     CAFFE_ENFORCE_NE(fd, -1, "Fail to open embedded tables file");
 
-    auto tables_size = std::accumulate(rows_64.begin(), rows_64.end(), 0ULL) *
+    auto tables_size = std::accumulate(rows.begin(), rows.end(), 0ULL) *
         sparse_feature_size;
 
     auto data =
-- 
2.34.1

