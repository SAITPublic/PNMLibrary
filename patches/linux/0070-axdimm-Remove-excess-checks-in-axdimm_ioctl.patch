From 36457bcbd8c65a0f83f4d1d7fd6b0265644cf651 Mon Sep 17 00:00:00 2001
From: gandarf <v.iliushin@partner.samsung.com>
Date: Thu, 10 Nov 2022 17:04:18 +0300
Subject: [PATCH 070/161] [axdimm] Remove excess checks in axdimm_ioctl

Remove access_ok check, because arg may not be ptr
and ptrs have already being checked in AXDIMM_COPY_FROM_USER

Related to: AXDIMM-416
---
 drivers/dax/axdimm.c           | 17 -----------------
 drivers/dax/axdimm_allocator.c |  4 ----
 2 files changed, 21 deletions(-)

diff --git a/drivers/dax/axdimm.c b/drivers/dax/axdimm.c
index 2e5ceab19..65be0823d 100644
--- a/drivers/dax/axdimm.c
+++ b/drivers/dax/axdimm.c
@@ -283,7 +283,6 @@ static void dump_ioctl_err(unsigned int cmd)
 
 long axdimm_ioctl(struct file *filp, unsigned int cmd, unsigned long __user arg)
 {
-	int err = 0;
 	int retval = 0;
 
 	/*
@@ -306,22 +305,6 @@ long axdimm_ioctl(struct file *filp, unsigned int cmd, unsigned long __user arg)
 	AXDIMM_DBG("Handling AXDIMM ioctl %u with arg 0x%lx\n", _IOC_NR(cmd),
 		   arg);
 
-	/*
-	 * the direction is a bitmask, and VERIFY_WRITE catches R/W
-	 * transfers. `Type' is user-oriented, while
-	 * access_ok is kernel-oriented, so the concept of "read" and
-	 * "write" is reversed
-	 */
-	if (_IOC_DIR(cmd) & _IOC_READ) {
-		err = !access_ok((void __user *)arg, _IOC_SIZE(cmd));
-	} else if (_IOC_DIR(cmd) & _IOC_WRITE) {
-		err = !access_ok((void __user *)arg, _IOC_SIZE(cmd));
-	}
-	if (err) {
-		AXDIMM_ERR("Cannot access user memory at 0x%lx\n", arg);
-		return -EFAULT;
-	}
-
 	switch (cmd) {
 	case DEVICE_IOCRESET:
 		while (unlikely(axdimm_device.sem_axdimm.count > AXDIMM_SEM_VALUE &&
diff --git a/drivers/dax/axdimm_allocator.c b/drivers/dax/axdimm_allocator.c
index ce254fca3..d4d5fc3bf 100644
--- a/drivers/dax/axdimm_allocator.c
+++ b/drivers/dax/axdimm_allocator.c
@@ -421,7 +421,6 @@ static int allocate_memory(struct axdimm_allocator *alloc,
 	/* Total number of allocated objects given the user memory policy */
 	const uint64_t num_obj =
 		gen_num_obj(request->num_user_objects, request->preference);
-	/* [TODO: s-koval] check for num_obj param sanity */
 
 	AXDIMM_DBG("Allocating memory for %llu objects\n", num_obj);
 
@@ -671,9 +670,6 @@ int deallocate_memory(struct axdimm_allocator *alloc, uint64_t desc)
 static int deallocate_memory_ioctl(struct axdimm_allocator *alloc,
 				   unsigned long __user arg)
 {
-	/* [TODO: @p.bred] we assume descriptor is uint64_t,
-	 * however in this method it's truncated to unsigned long.
-	 */
 	uint64_t in_desc = (uint64_t)arg;
 	int err_code = deallocate_memory(alloc, in_desc);
 
-- 
2.34.1

