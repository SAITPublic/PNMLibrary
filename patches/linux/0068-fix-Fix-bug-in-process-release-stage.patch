From d6d83d12fdf01159343c32f9df39f5d34866cf94 Mon Sep 17 00:00:00 2001
From: Sergey Lavrentiev <s.lavrentiev@samsung.com>
Date: Wed, 23 Nov 2022 15:18:08 +0300
Subject: [PATCH 068/161] [fix] Fix bug in process release stage

- move removing of process list entry under
correct if closure
- extend error logs by pid and tid numbers
of process caught errors

Signed-off-by: Sergey Lavrentiev <s.lavrentiev@samsung.com>
---
 drivers/dax/axdimm_process_manager.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

diff --git a/drivers/dax/axdimm_process_manager.c b/drivers/dax/axdimm_process_manager.c
index bde1550f5..ea7a1f000 100644
--- a/drivers/dax/axdimm_process_manager.c
+++ b/drivers/dax/axdimm_process_manager.c
@@ -161,11 +161,11 @@ int release_axdimm_process(struct axdimm_process_manager *mgr,
 			track_leaked_resources(mgr, proc_res);
 			goto release_process_unlock;
 		}
-	}
 
 free_proc_res:
-	list_del(&proc_res->list);
-	kfree(proc_res);
+		list_del(&proc_res->list);
+		kfree(proc_res);
+	}
 
 release_process_unlock:
 	mutex_unlock(&mgr->proc_list_lock);
@@ -215,8 +215,9 @@ int axdimm_proc_register_rank(struct axdimm_process_manager *mgr, int rank,
 		   rank_access_type_to_str(rank_type), rank,
 		   get_current_process_id(), current->pid);
 	if (set_rank_status(mgr, rank_type, rank, true)) {
-		AXDIMM_ERR("Fail to register rank_%s[%d]\n",
-			   rank_access_type_to_str(rank_type), rank);
+		AXDIMM_ERR("Fail to register rank_%s[%d], pid: %d, tid: %d\n",
+			   rank_access_type_to_str(rank_type), rank,
+			   get_current_process_id(), current->pid);
 		return -1;
 	}
 	return 0;
@@ -236,8 +237,9 @@ int axdimm_proc_remove_rank(struct axdimm_process_manager *mgr, int rank,
 		   rank_access_type_to_str(rank_type), rank,
 		   get_current_process_id(), current->pid);
 	if (set_rank_status(mgr, rank_type, rank, false)) {
-		AXDIMM_ERR("Fail to remove rank_%s[%d]\n",
-			   rank_access_type_to_str(rank_type), rank);
+		AXDIMM_ERR("Fail to remove rank_%s[%d], pid: %d, tid: %d\n",
+			   rank_access_type_to_str(rank_type), rank,
+			   get_current_process_id(), current->pid);
 		return -1;
 	}
 	return 0;
@@ -303,7 +305,8 @@ int axdimm_proc_register_alloc(struct axdimm_process_manager *mgr,
 	AXDIMM_DBG("Registering allocation, desc[%lld], pid: %d, tid: %d\n",
 		   desc, get_current_process_id(), current->pid);
 	if (register_descriptor(mgr, desc)) {
-		AXDIMM_ERR("Fail to register desc: %lld\n", desc);
+		AXDIMM_ERR("Fail to register desc: %lld, pid: %d, tid: %d\n",
+			   desc, get_current_process_id(), current->pid);
 		return -1;
 	}
 	return 0;
@@ -314,7 +317,8 @@ int axdimm_proc_remove_alloc(struct axdimm_process_manager *mgr, uint64_t desc)
 	AXDIMM_DBG("Removing allocation, desc[%lld], pid: %d, tid: %d\n", desc,
 		   get_current_process_id(), current->pid);
 	if (unregister_descriptor(mgr, desc)) {
-		AXDIMM_ERR("Fail to remove desc: %lld\n", desc);
+		AXDIMM_ERR("Fail to remove desc: %lld, pid: %d, tid: %d\n",
+			   desc, get_current_process_id(), current->pid);
 		return -1;
 	}
 	return 0;
-- 
2.34.1

