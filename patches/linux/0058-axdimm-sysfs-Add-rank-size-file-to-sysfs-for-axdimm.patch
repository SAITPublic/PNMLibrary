From c22e25b8a79b9fd14dbab24fdd2ec28053f3b5a8 Mon Sep 17 00:00:00 2001
From: Sergei Makarov <serg.makarov@samsung.com>
Date: Mon, 24 Oct 2022 16:13:31 +0000
Subject: [PATCH 058/161]  [axdimm][sysfs] Add rank size file to sysfs for
 axdimm.

This file is situated at `/sys/bus/dax/devices/dax0.0/ranks/i/size`.

Related to AXDIMM-425.

Signed-off-by: Sergei Makarov <serg.makarov@samsung.com>
---
 drivers/dax/axdimm_sysfs.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/drivers/dax/axdimm_sysfs.c b/drivers/dax/axdimm_sysfs.c
index 828b40135..6d11139a1 100644
--- a/drivers/dax/axdimm_sysfs.c
+++ b/drivers/dax/axdimm_sysfs.c
@@ -14,7 +14,7 @@
 #include <linux/types.h>
 
 #define RANK_ATTR_MAX 4
-#define RANK_SYSFS_ATTR_COUNT 3
+#define RANK_SYSFS_ATTR_COUNT 4
 #define RANK_SYSFS_GROUPS_COUNT 1
 #define REGION_SYSFS_ATTR_COUNT 2
 #define WITH_NULL_TERM(var) (var + 1)
@@ -119,6 +119,7 @@ static struct rank_sysfs {
 
 static const char *const rank_attr_name[] = {
 	"state",
+	"size",
 	"free_size",
 	"acquisition_count",
 };
@@ -126,8 +127,7 @@ static const char *const rank_attr_name[] = {
 static ssize_t rank_show(struct rank_attribute *attr, char *buf)
 {
 	uint8_t state;
-	uint64_t free_size;
-	uint64_t wr_acq_count;
+	uint64_t free_size, size, wr_acq_count;
 	struct gen_pool *pool;
 
 	if (strcmp(attr->attr.name, rank_attr_name[0]) == 0) {
@@ -140,6 +140,14 @@ static ssize_t rank_show(struct rank_attribute *attr, char *buf)
 	}
 
 	if (strcmp(attr->attr.name, rank_attr_name[1]) == 0) {
+		mutex_lock(&axdimm_allocator.memory_mutex);
+		pool = axdimm_allocator.mem_pools[attr->rank];
+		size = pool ? gen_pool_size(pool) : 0;
+		mutex_unlock(&axdimm_allocator.memory_mutex);
+		return sprintf(buf, "%llu\n", size);
+	}
+
+	if (strcmp(attr->attr.name, rank_attr_name[2]) == 0) {
 		mutex_lock(&axdimm_allocator.memory_mutex);
 		pool = axdimm_allocator.mem_pools[attr->rank];
 		free_size = pool ? gen_pool_avail(pool) : 0;
@@ -147,7 +155,7 @@ static ssize_t rank_show(struct rank_attribute *attr, char *buf)
 		return sprintf(buf, "%llu\n", free_size);
 	}
 
-	if (strcmp(attr->attr.name, rank_attr_name[2]) == 0) {
+	if (strcmp(attr->attr.name, rank_attr_name[3]) == 0) {
 		struct axdimm_rank_stat_t *axd_rs =
 			axdimm_rank_sched.axd_rank_stats;
 		wr_acq_count = atomic64_read(&axd_rs[attr->rank].wr_acquisition_count);
-- 
2.34.1

