From 56f7711484d42b0d4c82439539e300a7dda35488 Mon Sep 17 00:00:00 2001
From: Jinsu Park <jinsu0.park@samsung.com>
Date: Thu, 31 Aug 2023 11:26:00 +0900
Subject: [PATCH 3/6] [README] Add information about latency and update repo
 name

---
 README.md               | 37 +++++++++++++++++++++----------------
 README_REAL_APP_MODE.md | 10 +++++-----
 2 files changed, 26 insertions(+), 21 deletions(-)

diff --git a/README.md b/README.md
index 5a1f0ff..55604b9 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-# PNMSimulator
+# PNMDRAMsim3
 
 ## Table of Contents
 
@@ -12,14 +12,14 @@
 
 ## 1. Overview
 
-PNMSimulator is a cycle-accurate performance simulator that models the behavior
-and timing of CXL-based processing-near-memory (PNM) system. PNMSimulator
+PNMDRAMsim3 is a cycle-accurate performance simulator that models the behavior
+and timing of CXL-based processing-near-memory (PNM) system. PNMDRAMsim3
 currently supports modeling execution of SparseLengthSum (SLS) operations in
-PNM block.  PNMSimulator provides two trace modes &mdash; (1) **synthetic trace
-mode** with which PNMSimulator executes memory traffic trace generated by
+PNM block.  PNMDRAMsim3 provides two trace modes &mdash; (1) **synthetic trace
+mode** with which PNMDRAMsim3 executes memory traffic trace generated by
 synthetic trace generator and (2) **real application trace mode** with which
-PNMSimulator executes memory traffic trace of real application executed on
-QEMU-based system. PNMSimulator is developed based on
+PNMDRAMsim3 executes memory traffic trace of real application executed on
+QEMU-based system. PNMDRAMsim3 is developed based on
 [DRAMsim3](https://github.com/umd-memsys/DRAMsim3) [1].
 
 ## 2. CXL-PNM Architecture
@@ -53,9 +53,14 @@ After finishing SLS execution, the final result is transfered back to the host
 via CXL interface. Please refer to [Section 3](#3-synthetic-trace-generator)
 for more information about PNM read/write transactions.
 
+(Note: the CXL-PNM related latency values (e.g., CXL interface, instruction
+buffer write, PSUM buffer read) in the current simulator are temporary
+placeholder values. The exact latency values will be updated after measuring
+with real HW.)
+
 ## 3. Synthetic Trace Mode
 
-With sunthetic trace mode, PNMSimulator executes memory traffic trace generated
+With sunthetic trace mode, PNMDRAMsim3 executes memory traffic trace generated
 by synthetic trace generator. Synthetic trace generator generates memory
 traffic and instruction traces of SLS operations for CXL-PNM performance
 simulator. It generates two types of traces &mdash; (1) CXL-PNM trace which
@@ -116,7 +121,7 @@ command line parameters.
 
 ## 4. Real Application Trace Mode
 
-PNMSimulator also supports simulation for memory traffic trace of real
+PNMDRAMsim3 also supports simulation for memory traffic trace of real
 application. For more detailed information, please refer
 `README_REAL_APP_MODE.md`.
 
@@ -132,14 +137,14 @@ application. For more detailed information, please refer
 1. Download DRAMsim3 and apply patch for CXL-PNM.
 
 ```
-cd <PNMSimulator_path>/scripts
+cd <PNMDRAMsim3_path>/scripts
 bash get_pnm_sim.sh
 ```
 
 2. Build `pnm_sim`.
 
 ```
-cd <PNMSimulator_path>/pnm_sim
+cd <PNMDRAMsim3_path>/pnm_sim
 mkdir build
 cd build
 cmake .. -DCMD_TRACE=1
@@ -151,7 +156,7 @@ make -j
 ### 5.3. Build trace_gen
 
 ```
-cd <PNMSimulator_path>/trace_gen
+cd <PNMDRAMsim3_path>/trace_gen
 
 scons
 ```
@@ -173,7 +178,7 @@ Refer [Section 3](#3-synthetic-trace-generator) for the detailed information
 about parameters.
 
 ```
-cd <PNMSimulator_path>/scripts
+cd <PNMDRAMsim3_path>/scripts
 bash run_trace_gen.sh
 ```
 
@@ -182,18 +187,18 @@ Then, trace files will be saved on `scripts/traces` directory.
 ### 6.3. Run `pnm_sim`.
 
 ```
-cd <PNMSimulator_path>/scripts
+cd <PNMDRAMsim3_path>/scripts
 bash run_pnm_sim.sh
 ```
 
 The script will run the performance simulator with the traces in
 `scripts/traces` directory and save the results on `results/res_<timestamp>`
-directory.
+directory. The `dramsim3.txt` file contains performance results.
 
 ## 7. Code Structure
 
 ```
-PNMSimulator/               # Root directory of PNMSimulator
+PNMDRAMsim3/               # Root directory of PNMDRAMsim3
 ├─ pnm_sim/                 # Source code for the performance simulator
 ├─ trace_gen/               # Source code for the synthetic trace generator
 ├─ trace_conv/              # Source code for the trace converter
diff --git a/README_REAL_APP_MODE.md b/README_REAL_APP_MODE.md
index 1cf0066..3b95c33 100644
--- a/README_REAL_APP_MODE.md
+++ b/README_REAL_APP_MODE.md
@@ -39,7 +39,7 @@ Download Ubuntu 22.04 server image.
 ### Run PNM QEMU
 
 ```
-cd <PNMSimulator_path>/scripts_real_app_mode
+cd <PNMDRAMsim3_path>/scripts_real_app_mode
 bash run_qemu.sh
 ```
 
@@ -49,14 +49,14 @@ Change `CPU_PARAM`.
 ### Install Ubuntu by Using VNC
 
 ```
-cd <PNMSimulator_path>/scripts_real_app_mode
+cd <PNMDRAMsim3_path>/scripts_real_app_mode
 bash vnc_qemu.sh
 ```
 
 ### Access QEMU with SSH
 
 ```
-cd <PNMSimulator_path>/scripts_real_app_mode
+cd <PNMDRAMsim3_path>/scripts_real_app_mode
 bash ssh_qemu.sh
 ```
 
@@ -241,13 +241,13 @@ pnm-trace-file off
 ## Trace Converter
 
 ```
-cd <PNMSimulator_path>/scripts_real_app_mode
+cd <PNMDRAMsim3_path>/scripts_real_app_mode
 python3 trace_conv.py pnm_trace-1.txt > converted.trc
 ```
 
 ## Run with Real Application Trace
 
 ```
-cd <PNMSimulator_path>/scripts_real_app_mode
+cd <PNMDRAMsim3_path>/scripts_real_app_mode
 bash run_pnm_sim_real_app_mode.sh
 ```
-- 
2.34.1

