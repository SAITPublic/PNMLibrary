From 7c28e58ec82792647eb5d0b472346f61f420487c Mon Sep 17 00:00:00 2001
From: Sergei Makarov <serg.makarov@samsung.com>
Date: Thu, 29 Sep 2022 15:42:42 +0000
Subject: [PATCH 22/33] Rename sls_device to sls_accel

---
 DeepRecSys.py            |  4 ++--
 models/dlrm_s_caffe2.py  | 10 +++++-----
 run_DeepRecSys_axdimm.sh |  6 +++---
 utils/utils.py           |  2 +-
 4 files changed, 11 insertions(+), 11 deletions(-)

diff --git a/DeepRecSys.py b/DeepRecSys.py
index c730f15..1300ef9 100644
--- a/DeepRecSys.py
+++ b/DeepRecSys.py
@@ -142,7 +142,7 @@ def DeepRecSys():
       else exit("(axdimm) sls_dtype: {0} is not supported.".format(args.sls_dtype))
 
     tables_descriptor = 0
-    if args.sls_device:
+    if args.sls_accel:
       ln_emb = np.fromstring(args.arch_embedding_size, dtype=int, sep="-")
 
       if args.use_secndp_algo:
@@ -287,7 +287,7 @@ def DeepRecSys():
 
     status = 0
     # [AXDIMM caffe2 backend] Destroy AXDIMM for parent process.
-    if args.sls_device:
+    if args.sls_accel:
       if args.use_secndp_algo:
         status = workspace.SecureAxdimmCloser()
       else:
diff --git a/models/dlrm_s_caffe2.py b/models/dlrm_s_caffe2.py
index 69dfc99..c3f17df 100644
--- a/models/dlrm_s_caffe2.py
+++ b/models/dlrm_s_caffe2.py
@@ -108,7 +108,7 @@ class DLRM_Wrapper(object):
             print("(Wrapper) Using CPU...")
 
         self.accel_en = accel_en
-        self.use_axdimm_caffe2_backend = cli_args.sls_device is not None
+        self.use_axdimm_caffe2_backend = cli_args.sls_accel is not None
 
         num_tables = len(cli_args.arch_embedding_size.split("-"))
 
@@ -348,12 +348,12 @@ class DLRM_Net(object):
             emb_l.append(EE)
 
         if self.use_axdimm_caffe2_backend:
-            if self.args.sls_device == "axdimm":
+            if self.args.sls_accel == "axdimm":
                 dev_type = caffe2_pb2.AXDIMM
-            elif self.args.sls_device == "cpu":
+            elif self.args.sls_accel == "cpu":
                 dev_type = caffe2_pb2.CPU
             else:
-                raise ValueError("Wrong device type: {}".format(self.args.sls_device))
+                raise ValueError("Wrong device type: {}".format(self.args.sls_accel))
 
             WITH_SGX = True
             WITHOUT_SGX = False
@@ -481,7 +481,7 @@ class DLRM_Net(object):
         # ##########################
         # setup AXDIMM device
         # ##########################
-        self.use_axdimm_caffe2_backend = cli_args.sls_device is not None
+        self.use_axdimm_caffe2_backend = cli_args.sls_accel is not None
         self.tables_descriptor = tables_descriptor
 
         if cli_args.arch_interaction_op == "dot":
diff --git a/run_DeepRecSys_axdimm.sh b/run_DeepRecSys_axdimm.sh
index 5726be9..5c02ea2 100755
--- a/run_DeepRecSys_axdimm.sh
+++ b/run_DeepRecSys_axdimm.sh
@@ -78,7 +78,7 @@ accel_args=""
 table_weight_path="./tables/embedded.bin"
 
 USE_SECURE_ALGO=''
-SLS_DEVICE="axdimm"
+SLS_ACCEL="axdimm"
 SLS_DTYPE='float32'
 # shared by default
 TABLES_SHARING_STRATEGY=""
@@ -105,7 +105,7 @@ do
 	        ;;
   "--device")
           shift
-          SLS_DEVICE=$1
+          SLS_ACCEL=$1
           ;;
   "--sls_dtype")
           shift
@@ -144,7 +144,7 @@ fi
 
 engine_args="--inference_engines $inference_engines --caffe2_net_type $caffe2_net_type"
 
-axdimm_args="--table_weight_path $table_weight_path $USE_SECURE_ALGO $USE_SGX $TAG_VERIFICATION --sls_device $SLS_DEVICE --sls_dtype $SLS_DTYPE $TABLES_SHARING_STRATEGY"
+axdimm_args="--table_weight_path $table_weight_path $USE_SECURE_ALGO $USE_SGX $TAG_VERIFICATION --sls_accel $SLS_ACCEL --sls_dtype $SLS_DTYPE $TABLES_SHARING_STRATEGY"
 # axdimm_args=""
 
 avg_arrival_rate=1
diff --git a/utils/utils.py b/utils/utils.py
index 1601bb1..a5d76a4 100644
--- a/utils/utils.py
+++ b/utils/utils.py
@@ -147,7 +147,7 @@ def cli():
     parser.add_argument("--use_secndp_algo", action="store_true", default=False)
     parser.add_argument("--use_sgx", action="store_true", default=False)
     parser.add_argument("--use_tags", action="store_true", default=False)
-    parser.add_argument("--sls_device", type=str, default=None)
+    parser.add_argument("--sls_accel", type=str, default=None)
     parser.add_argument("--sls_dtype", type=str, choices=["float32", "int32"], default="float32")
     parser.add_argument("--private_tables", dest='share_tables', action="store_false", default=True)
 
-- 
2.34.1

