From 1a9e937fa25193b3b4ecc1b211027397e03aacaf Mon Sep 17 00:00:00 2001
From: Egor Kutovoi <e.kutovoi@partner.samsung.com>
Date: Mon, 19 Sep 2022 16:05:17 +0300
Subject: [PATCH 18/33] Add private IE tables for unsecure mode

Shared tables are the default, and private tables can be enabled
on demand.

Related to: AXDIMM-319
---
 DeepRecSys.py            | 15 ++++++++++++---
 models/dlrm_s_caffe2.py  |  7 +++++--
 run_DeepRecSys_axdimm.sh |  7 ++++++-
 utils/utils.py           |  5 +++++
 4 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/DeepRecSys.py b/DeepRecSys.py
index e661201..8779960 100644
--- a/DeepRecSys.py
+++ b/DeepRecSys.py
@@ -115,6 +115,9 @@ def response_queue_handler(
 def DeepRecSys():
   print("Running DeepRecSys")
 
+  # Make sure logging works
+  workspace.GlobalInit(["caffe2", "--caffe2_log_level=0"])
+
   # ######################################################################
   # Get and print command line arguments for this experiment
   # ######################################################################
@@ -141,9 +144,15 @@ def DeepRecSys():
     tables_descriptor = 0
     if args.use_axdimm_caffe2_backend:
       ln_emb = np.fromstring(args.arch_embedding_size, dtype=int, sep="-")
-      op = workspace.SecureAxdimmStarter if args.use_secndp_algo else workspace.AxdimmStarter
-      tables_descriptor = op(args.table_weight_path, ln_emb,
-                      args.arch_sparse_feature_size * dtype_in_bytes, args.mem_preference)
+
+      if args.use_secndp_algo:
+        tables_descriptor = workspace.SecureAxdimmStarter(args.table_weight_path, ln_emb,
+                                                          args.arch_sparse_feature_size * dtype_in_bytes)
+      else:
+        tables_descriptor = workspace.AxdimmStarter(args.table_weight_path, ln_emb,
+                                                    args.arch_sparse_feature_size * dtype_in_bytes,
+                                                    args.mem_preference,
+                                                    args.share_tables)
 
     # Setup single request Queue and multiple response queues
     requestQueue    = Queue(maxsize=1024)
diff --git a/models/dlrm_s_caffe2.py b/models/dlrm_s_caffe2.py
index ab45b26..918051a 100644
--- a/models/dlrm_s_caffe2.py
+++ b/models/dlrm_s_caffe2.py
@@ -366,8 +366,9 @@ class DLRM_Net(object):
                                                   "int32": model.net.SgxSecureSparseLengthsSumIntVec}
 
             with core.DeviceScope(core.DeviceOption(dev_type, 0)):
+                rows = [int(v) for v in self.args.arch_embedding_size.split("-")]
+
                 if self.args.use_secndp_algo:
-                    rows = [int(v) for v in self.args.arch_embedding_size.split("-")]
                     op = secure_operators_map[self.args.use_sgx][self.args.sls_dtype]
                     EE = op([*tbl_s_combined, *ind_s_combined, *len_s_combined],
                             [sls_s_combined],
@@ -377,7 +378,9 @@ class DLRM_Net(object):
                 else:
                     EE = model.net.SparseLengthsSumVec([*tbl_s_combined, *ind_s_combined, *len_s_combined],
                                                        [sls_s_combined],
-                                                       tables_layout_descriptor=self.tables_descriptor)
+                                                       tables_layout_descriptor=self.tables_descriptor,
+                                                       path=self.args.table_weight_path,
+                                                       mem_preference=self.args.mem_preference)
                 emb_l.append(EE)
 
         return emb_l, weights_l
diff --git a/run_DeepRecSys_axdimm.sh b/run_DeepRecSys_axdimm.sh
index 4e814cb..bd40ea7 100755
--- a/run_DeepRecSys_axdimm.sh
+++ b/run_DeepRecSys_axdimm.sh
@@ -80,6 +80,8 @@ table_weight_path="./tables/embedded.bin"
 USE_SECURE_ALGO=''
 SLS_DEVICE="axdimm"
 SLS_DTYPE='float32'
+# shared by default
+TABLES_SHARING_STRATEGY=""
 while [ "$#" -ne 0 ]
 do
   case "$1" in
@@ -96,6 +98,9 @@ do
   "--tag")
 	        TAG_VERIFICATION="--use_tags"
 	        ;;
+  "--private_tables")
+          TABLES_SHARING_STRATEGY="--private_tables"
+	        ;;
   "--device")
           shift
           SLS_DEVICE=$1
@@ -123,7 +128,7 @@ fi
 
 engine_args="--inference_engines $inference_engines --caffe2_net_type $caffe2_net_type"
 
-axdimm_args="--use_axdimm_caffe2_backend --table_weight_path $table_weight_path $USE_SECURE_ALGO $USE_SGX $TAG_VERIFICATION --sls_device $SLS_DEVICE --sls_dtype $SLS_DTYPE"
+axdimm_args="--use_axdimm_caffe2_backend --table_weight_path $table_weight_path $USE_SECURE_ALGO $USE_SGX $TAG_VERIFICATION --sls_device $SLS_DEVICE --sls_dtype $SLS_DTYPE $TABLES_SHARING_STRATEGY"
 # axdimm_args=""
 
 avg_arrival_rate=1
diff --git a/utils/utils.py b/utils/utils.py
index 14452a3..82967f0 100644
--- a/utils/utils.py
+++ b/utils/utils.py
@@ -150,6 +150,7 @@ def cli():
     parser.add_argument("--use_tags", action="store_true", default=False)
     parser.add_argument("--sls_device", type=str, default="axdimm")
     parser.add_argument("--sls_dtype", type=str, choices=["float32", "int32"], default="float32")
+    parser.add_argument("--private_tables", dest='share_tables', action="store_false", default=True)
 
     args = parser.parse_args()
 
@@ -190,6 +191,10 @@ def cli():
         type_of = type(getattr(args, key))
         setattr(args, key, type_of(config[key]))
 
+    if args.use_secndp_algo and args.share_tables:
+      args.share_tables = False
+      print('Sharing tables in secure mode is not supported!')
+
     ### some basic setup ###
     np.random.seed(args.numpy_rand_seed)
 
-- 
2.34.1

